{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Importing required Modules and Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.linear_model import SGDClassifier\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Loading the CardioVascularDiseaseDetection Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the cardiovascular disease detection dataset (in csv format)\n",
    "#we are storing our dataset in \"df\" variable to make our job easier.\n",
    "df=pd.read_csv(r'C:\\Users\\Sony\\Desktop\\cardio_train.csv', sep=\";\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "checking the first five rows of the dataset in order to get general idea of features and variables.\n",
    "\n",
    "checking the input variables and output variables.\n",
    "\n",
    "the head() function used to view the preview of the data for given number of rows,if no value is given then bydefault it will display first five rows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>988</td>\n",
       "      <td>22469</td>\n",
       "      <td>1</td>\n",
       "      <td>155</td>\n",
       "      <td>69.0</td>\n",
       "      <td>130</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>989</td>\n",
       "      <td>14648</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>71.0</td>\n",
       "      <td>110</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>990</td>\n",
       "      <td>21901</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>70.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>991</td>\n",
       "      <td>14549</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>85.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>992</td>\n",
       "      <td>23393</td>\n",
       "      <td>1</td>\n",
       "      <td>155</td>\n",
       "      <td>62.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0  988  22469       1     155    69.0    130     80            2     2      0   \n",
       "1  989  14648       1     163    71.0    110     70            1     1      0   \n",
       "2  990  21901       1     165    70.0    120     80            1     1      0   \n",
       "3  991  14549       2     165    85.0    120     80            1     1      1   \n",
       "4  992  23393       1     155    62.0    120     80            1     1      0   \n",
       "\n",
       "   alco  active  cardio  \n",
       "0     0       1       0  \n",
       "1     0       1       1  \n",
       "2     0       1       0  \n",
       "3     1       1       0  \n",
       "4     0       1       0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Verbal Description of above Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Features:\n",
    "\n",
    "Age | Objective Feature | age | int (days)\n",
    "\n",
    "Height | Objective Feature | height | int (cm) |\n",
    "\n",
    "Weight | Objective Feature | weight | float (kg) |\n",
    "\n",
    "Gender | Objective Feature | gender | categorical code |0:Female ,1: Male\n",
    "\n",
    "Systolic blood pressure | Examination Feature | ap_hi | int |\n",
    "\n",
    "Diastolic blood pressure | Examination Feature | ap_lo | int |\n",
    "\n",
    "\n",
    "Cholesterol | Examination Feature | cholesterol | 1: normal, 2: above normal, 3: well above normal |\n",
    "\n",
    "Glucose | Examination Feature | gluc | 1: normal, 2: above normal, 3: well above normal |\n",
    "\n",
    "Smoking | Subjective Feature | smoke | binary |0: No,1:yes\n",
    "\n",
    "Alcohol intake | Subjective Feature | alco | binary |0: No ,1: yes\n",
    "\n",
    "Physical activity | Subjective Feature | active | binary |0: No ,1: yes\n",
    "        \n",
    "Presence or absence of cardiovascular disease | Target Variable | cardio | binary |0: No ,1: yes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Exploring the Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once the importing of the dataset is done,we get the rough idea of the dataset as below-- this dataset contains features necessary to check whether a person is having cardiovascular disease. so here \"cardio\" is the dependent or output variable. it is the time to make complete \"Exploratory Data Analysis i.e. EDA\" Let's start it with checking the number of rows and columns in the given Dataset-->"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(69301, 13)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "this dataset contains 69301 rows and 13 columns. Now lets check the name of all the columns this dataset have so that it is easy for us to -- --view the names of columns in easier way and make further analysis on them--"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'age', 'gender', 'height', 'weight', 'ap_hi', 'ap_lo',\n",
       "       'cholesterol', 'gluc', 'smoke', 'alco', 'active', 'cardio'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the above output we can clearly see the names of all columns. now by observing the dataset and column names it is clear that feature \"cardio\" is dependent-- --variable and all other features are independent. For further analysis we have to check the datatypes of values of each column-->"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id               int64\n",
       "age              int64\n",
       "gender           int64\n",
       "height           int64\n",
       "weight         float64\n",
       "ap_hi            int64\n",
       "ap_lo            int64\n",
       "cholesterol      int64\n",
       "gluc             int64\n",
       "smoke            int64\n",
       "alco             int64\n",
       "active           int64\n",
       "cardio           int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Checking the Missing Values in Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " from above output,it is clearly visible that all the values of each column are either float type-- or integer type. one thing to be noticed here is that only output variable is in integer type ,all other variables-- --are in float type. Now lets check for sum of the missing values in each column-->   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             0\n",
       "age            0\n",
       "gender         0\n",
       "height         0\n",
       "weight         0\n",
       "ap_hi          0\n",
       "ap_lo          0\n",
       "cholesterol    0\n",
       "gluc           0\n",
       "smoke          0\n",
       "alco           0\n",
       "active         0\n",
       "cardio         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "that's great ,we have no null values in the given dataset,it makes our job easy...isn't it?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Statistical summary of the Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "now lets see the summary of the statistics of the dataset pertaining to the dataset columns, like mean,median,mode,standard deviation and IQR values. as the whole dataset is numeric so no need to worry for the dropping of any column as below function- --only works on numerical data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "      <td>69301.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>50471.480397</td>\n",
       "      <td>19468.786280</td>\n",
       "      <td>1.349519</td>\n",
       "      <td>164.362217</td>\n",
       "      <td>74.203027</td>\n",
       "      <td>128.829584</td>\n",
       "      <td>96.650092</td>\n",
       "      <td>1.366806</td>\n",
       "      <td>1.226447</td>\n",
       "      <td>0.088051</td>\n",
       "      <td>0.053881</td>\n",
       "      <td>0.803986</td>\n",
       "      <td>0.499589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>28563.100347</td>\n",
       "      <td>2467.261818</td>\n",
       "      <td>0.476821</td>\n",
       "      <td>8.205337</td>\n",
       "      <td>14.383469</td>\n",
       "      <td>154.775805</td>\n",
       "      <td>189.096240</td>\n",
       "      <td>0.680270</td>\n",
       "      <td>0.572246</td>\n",
       "      <td>0.283371</td>\n",
       "      <td>0.225784</td>\n",
       "      <td>0.396982</td>\n",
       "      <td>0.500003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>988.000000</td>\n",
       "      <td>10798.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>-150.000000</td>\n",
       "      <td>-70.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>25745.000000</td>\n",
       "      <td>17664.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>159.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>50494.000000</td>\n",
       "      <td>19704.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>75150.000000</td>\n",
       "      <td>21326.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>99999.000000</td>\n",
       "      <td>23713.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>16020.000000</td>\n",
       "      <td>11000.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id           age        gender        height        weight  \\\n",
       "count  69301.000000  69301.000000  69301.000000  69301.000000  69301.000000   \n",
       "mean   50471.480397  19468.786280      1.349519    164.362217     74.203027   \n",
       "std    28563.100347   2467.261818      0.476821      8.205337     14.383469   \n",
       "min      988.000000  10798.000000      1.000000     55.000000     10.000000   \n",
       "25%    25745.000000  17664.000000      1.000000    159.000000     65.000000   \n",
       "50%    50494.000000  19704.000000      1.000000    165.000000     72.000000   \n",
       "75%    75150.000000  21326.000000      2.000000    170.000000     82.000000   \n",
       "max    99999.000000  23713.000000      2.000000    250.000000    200.000000   \n",
       "\n",
       "              ap_hi         ap_lo   cholesterol          gluc         smoke  \\\n",
       "count  69301.000000  69301.000000  69301.000000  69301.000000  69301.000000   \n",
       "mean     128.829584     96.650092      1.366806      1.226447      0.088051   \n",
       "std      154.775805    189.096240      0.680270      0.572246      0.283371   \n",
       "min     -150.000000    -70.000000      1.000000      1.000000      0.000000   \n",
       "25%      120.000000     80.000000      1.000000      1.000000      0.000000   \n",
       "50%      120.000000     80.000000      1.000000      1.000000      0.000000   \n",
       "75%      140.000000     90.000000      2.000000      1.000000      0.000000   \n",
       "max    16020.000000  11000.000000      3.000000      3.000000      1.000000   \n",
       "\n",
       "               alco        active        cardio  \n",
       "count  69301.000000  69301.000000  69301.000000  \n",
       "mean       0.053881      0.803986      0.499589  \n",
       "std        0.225784      0.396982      0.500003  \n",
       "min        0.000000      0.000000      0.000000  \n",
       "25%        0.000000      1.000000      0.000000  \n",
       "50%        0.000000      1.000000      0.000000  \n",
       "75%        0.000000      1.000000      1.000000  \n",
       "max        1.000000      1.000000      1.000000  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Checking for outliers in Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "if we go through above satistics ,then in \"ap_hi\" column the value of mean and max is different with high values.\n",
    "\n",
    "So we will check through Boxplot if any outlier present in this column?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x279d539c2c8>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df.ap_hi)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "Lets check Z-Score for the given dataset to check the score that expresses the value of a distribution in standard deviation with respect to the mean."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import necessary modules/Library for checking Z Score of the dataset\n",
    "\n",
    "from scipy.stats import zscore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1.73243929 1.21601824 0.73302344 ... 0.23864069 0.49376463 0.99917784]\n",
      " [1.73240428 1.95391548 0.73302344 ... 0.23864069 0.49376463 1.00082284]\n",
      " [1.73236927 0.98580185 0.73302344 ... 0.23864069 0.49376463 0.99917784]\n",
      " ...\n",
      " [1.7338761  0.16325352 1.36421285 ... 4.19040018 2.02525646 1.00082284]\n",
      " [1.73394612 1.20061644 0.73302344 ... 0.23864069 2.02525646 1.00082284]\n",
      " [1.73398113 0.43417421 0.73302344 ... 0.23864069 0.49376463 0.99917784]]\n"
     ]
    }
   ],
   "source": [
    "z=np.abs(zscore(df))\n",
    "print(z)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From above values it is seen that the outliers present in the \"ap_hi\" column are not making very big difference in the value of standard deviation in z score values so right now no need to remove outliers through this method.We will standardized the given data in later part."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Checking the Skewness of the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x00000279D5A12808>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D54C13C8>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D54F6C48>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D552ED88>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x00000279D5568E88>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D55A1F48>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D55DF0C8>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D5607F88>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x00000279D561BCC8>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D5656E88>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D56C2448>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D56F9548>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x00000279D5733688>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D576C788>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D57A3948>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x00000279D57DDAC8>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 16 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.hist(figsize=(20,20), grid = True, layout = (4,4), bins = 30)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Checking the Correlation between Features/variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's check the corelation between the target variable and predictor variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x279d3c8e8c8>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "correlation = df.corr()\n",
    "plt.figure(figsize=(12, 5))\n",
    "sns.heatmap(correlation, annot=True, linewidths=0, vmin=-1, cmap=\"RdBu_r\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cardio         1.000000\n",
       "age            0.238095\n",
       "cholesterol    0.220752\n",
       "weight         0.182094\n",
       "gluc           0.089062\n",
       "ap_lo          0.065290\n",
       "ap_hi          0.054211\n",
       "gender         0.008592\n",
       "id             0.004269\n",
       "alco          -0.007217\n",
       "height        -0.011015\n",
       "smoke         -0.015225\n",
       "active        -0.035592\n",
       "Name: cardio, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation['cardio'].sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "We can observe that, the 'age, cholesterol, weight ' have maximum corelation with response variable 'cardio'.\n",
    "\n",
    "This means that, they need to be further analysed for detailed pattern and corelation exploration. Hence, we will use only these 3 variables in our future analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Univariate and Bivariate analysis of Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "Let's check how many unique values does the target feature 'cardio' has?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1], dtype=int64)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"cardio\"].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And how data is distributed among those values?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    34679\n",
       "1    34622\n",
       "Name: cardio, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.cardio.value_counts().sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x279d7561248>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting the graph for visualizing better the distribution of \"cardio\" variable.\n",
    "sns.countplot(x='cardio', data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above distribution shows the range for response variable (cardio) is between equal for both values.\n",
    "\n",
    "Lets check for distribution pattern between \"cardio\" and \"age\" variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x279d75b0208>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#distribution between \"cardio\" and \"age\"\n",
    "fig = plt.figure(figsize = (10,6))\n",
    "sns.barplot(x = 'cardio', y = 'age', data = df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we see that \"age\" does not give any specification to classify the \"cardio\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x279d770ec08>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Lets check the same for \"cardio\" and \"cholesterol\" columns\n",
    "fig = plt.figure(figsize = (10,6))\n",
    "sns.barplot(x = 'cardio', y = 'cholesterol', data = df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "we can observe from above that the person having cardiovascular disease has higher cholesterol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x279d76d7788>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Now lets check same for \"cardio\" and \"weight\" columns\n",
    "fig = plt.figure(figsize = (10,6))\n",
    "sns.barplot(x = 'cardio', y = 'weight', data = df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "more weight for the person having cardiovascular disease"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Train_Test_Split to separate target and input variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#seperating the dataset as response variable and feature variabes\n",
    "\n",
    "\n",
    "x = df.drop('cardio', axis = 1)\n",
    "y = df['cardio']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(69301, 12)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(69301,)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "#train test splitting of the data\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.30, random_state = 42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(48510, 12)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20791, 12)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(48510,)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20791,)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Standardization Technique to get optimized results through Standard Scaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "sc = StandardScaler()\n",
    "x_train=sc.fit_transform(x_train)\n",
    "x_test=sc.fit_transform(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our training and testing data is ready now to perform machine learning algorithm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Model Selection"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The target variable in the given dataset is being converted into classifications hence the problem becomes classification problem.\n",
    "\n",
    "Therefore the machine learning algorithms of classification can be applied here in for training and testing of data.\n",
    "\n",
    "We will check for the best model one by one"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Machine Learning Classification Models to Train and test the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "model=[LogisticRegression(),GaussianNB(),DecisionTreeClassifier(),RandomForestClassifier()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7145399451685825\n",
      "[[7843 2529]\n",
      " [3406 7013]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.70      0.76      0.73     10372\n",
      "           1       0.73      0.67      0.70     10419\n",
      "\n",
      "    accuracy                           0.71     20791\n",
      "   macro avg       0.72      0.71      0.71     20791\n",
      "weighted avg       0.72      0.71      0.71     20791\n",
      "\n",
      "\n",
      " \n",
      "0.5807801452551585\n",
      "[[9287 1085]\n",
      " [7631 2788]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.55      0.90      0.68     10372\n",
      "           1       0.72      0.27      0.39     10419\n",
      "\n",
      "    accuracy                           0.58     20791\n",
      "   macro avg       0.63      0.58      0.54     20791\n",
      "weighted avg       0.63      0.58      0.54     20791\n",
      "\n",
      "\n",
      " \n",
      "0.6028570054350441\n",
      "[[6807 3565]\n",
      " [4692 5727]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.59      0.66      0.62     10372\n",
      "           1       0.62      0.55      0.58     10419\n",
      "\n",
      "    accuracy                           0.60     20791\n",
      "   macro avg       0.60      0.60      0.60     20791\n",
      "weighted avg       0.60      0.60      0.60     20791\n",
      "\n",
      "\n",
      " \n",
      "0.716560050021644\n",
      "[[8193 2179]\n",
      " [3714 6705]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.69      0.79      0.74     10372\n",
      "           1       0.75      0.64      0.69     10419\n",
      "\n",
      "    accuracy                           0.72     20791\n",
      "   macro avg       0.72      0.72      0.72     20791\n",
      "weighted avg       0.72      0.72      0.72     20791\n",
      "\n",
      "\n",
      " \n"
     ]
    }
   ],
   "source": [
    "for m in model:\n",
    "    m.fit(x_train,y_train)\n",
    "    m.score(x_train,y_train)\n",
    "    predm=m.predict(x_test)\n",
    "    print(accuracy_score(y_test,predm))\n",
    "    print(confusion_matrix(y_test,predm))\n",
    "    print(classification_report(y_test,predm))\n",
    "    print('\\n ')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# GridSearch CV"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Hyperparameter Tuning  for our RFC model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'max_features': 'auto', 'n_estimators': 200}\n"
     ]
    }
   ],
   "source": [
    "rfc = RandomForestClassifier(n_jobs=-1,max_features= 'sqrt' ,n_estimators=50, oob_score = True) \n",
    "\n",
    "param_grid = { \n",
    "    'n_estimators': [200, 700],\n",
    "    'max_features': ['auto', 'sqrt', 'log2']\n",
    "}\n",
    "\n",
    "CV_rfc = GridSearchCV(estimator=rfc, param_grid=param_grid, cv= 5)\n",
    "CV_rfc.fit(x_train, y_train)\n",
    "print (CV_rfc.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.69      0.79      0.74     10372\n",
      "           1       0.75      0.65      0.70     10419\n",
      "\n",
      "    accuracy                           0.72     20791\n",
      "   macro avg       0.72      0.72      0.72     20791\n",
      "weighted avg       0.72      0.72      0.72     20791\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#Let's run our RFC again with the best parameters.\n",
    "rfc2= RandomForestClassifier(n_jobs=-1, max_features = 'auto', n_estimators =200,oob_score = True)\n",
    "rfc2.fit(x_train, y_train)\n",
    "pred_rfc2 = rfc2.predict(x_test)\n",
    "print(classification_report(y_test, pred_rfc2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cross Validation Score on RFC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7245516388373531"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Now lets try to do some evaluation for random forest model using cross validation.\n",
    "rfc_eval = cross_val_score(estimator = rfc2, X = x_train, y = y_train, cv = 10)\n",
    "rfc_eval.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Storing the predicted results in csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred_rfc2 = pd.DataFrame(pred_rfc2, columns=['pred_rfc2']).to_csv('cardiovascularDiseaseDetection.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Saving the best Model (RFC2) as a pickle in a file."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I have selected Random Forest Classifier Model (RFC2) as best model as it is giving me best accuracy score after performing hyperparameter tuning through Grid Search CV method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.externals import joblib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['CardiovascularDiseaseDetection.pkl']"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "joblib.dump(rfc2,'CardiovascularDiseaseDetection.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
